syntax = "proto3";
package com.cmj.example.vo;

/*消息的枚举类型*/
enum HeadType {
  // 登录
  LOGIN_REQUEST = 0;
  // 登录响应
  LOGIN_RESPONSE = 1;
  // 退出登录
  LOGOUT_REQUEST = 2;
  // 退出登录响应
  LOGOUT_RESPONSE = 3;
  // 心跳
  HEART_BEAT = 4;
  // 聊天
  MESSAGE_REQUEST = 5;
  // 聊天响应
  MESSAGE_RESPONSE = 6;
  // 通知
  MESSAGE_NOTIFICATION = 7;
}

/*登录请求*/
message LoginRequest {
  // 用户ID
  string user_id = 1;
  // 设备ID
  string device_id = 2;
  // token
  string token = 3;
  // 平台 1：windows；2：mac；3：android；4：ios；5：web
  uint32 platform = 4;
  // app版本号
  string app_version = 5;
}

/*登录响应*/
message LoginResponse {
  // true表示发送成功，false表示发送失败
  bool is_success = 1;
  // 返回码
  uint32 code = 2;
  // 错误描述
  string desc = 3;
  // 错误描述是否提示给用户:1 提示;0 不提示
  uint32 expose = 4;
  //是否为最后的应答
  bool lastBlock = 5;
  //应答的序号
  fixed32 blockIndex = 6;

}

/*聊天消息*/
message MessageRequest {
  // 消息ID
  uint64 message_id = 1;
  // 来源userId
  string from_id = 2;
  // 目的userId
  string to_id = 3;
  // 发送时间
  uint64 time = 4;
  // 消息类型
  uint32 msg_type = 5;
  // 消息内容
  string content = 6;
  string url = 8;
  string property = 9;
  string from_nick = 10;
  string json = 11;
}

/*聊天响应*/
message MessageResponse {
  // true表示发送成功，false表示发送失败
  bool is_success = 1;
  // 返回码
  uint32 code = 2;
  // 错误描述
  string desc = 3;
  // 错误描述是否提示给用户:1 提示;0 不提示
  uint32 expose = 4;
  //是否为最后的应答
  bool lastBlock = 5;
  //应答的序号
  fixed32 blockIndex = 6;
}


/*通知*/
message MessageNotification {
  uint64 no_id = 1;
  string json = 2;
  string timestamp = 3;
}

/*心跳*/
message MessageHeartBeat {
  uint32   seq = 1;
  string   uid = 2;
  string   json = 3;
}

/*顶层消息*/
//顶层消息是一种嵌套消息，嵌套了各种类型消息
//逻辑上：根据消息类型 type的值，最多只有一个有效
message Message {
  //通用字段: 消息类型
  HeadType       type = 1;
  //通用字段：消息序列号（用于匹配request和response）
  uint64         sequence = 2;
  //通用字段：会话id
  string         session_id = 3;
  //登录请求
  LoginRequest   loginRequest = 4;
  //登录响应
  LoginResponse  loginResponse = 5;
  //IM消息请求
  MessageRequest  messageRequest = 6;
  //IM消息响应
  MessageResponse  messageResponse = 7;
  //系统通知
  MessageNotification  notification = 8;
  //心跳
  MessageHeartBeat     heartBeat = 9;
}
